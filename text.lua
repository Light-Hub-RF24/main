local function vm(bc,key)local function decrypt(v) local r=v for i=1,#r do r=string.gsub(r,string.char(string.byte(r,i)),string.char(string.byte(r,i)~239)) end return r endlocal stack,pc,top={},{},0local consts=split(decrypt(bc:sub(17),'|')local function split(s,d) local t={} local i=1 local b='' while i<=#s do if s:sub(i,i)==d then t[#t+1]=b b='' else b=b..s:sub(i,i) end i=i+1 end t[#t+1]=b return t endlocal opMap={[0]=[5]=1,[4]=2,[3]=3,[6]=4,[1]=5,[2]=6,[7]=7,}local function verifyChecksum(bc,k) local cs=0 for i=1,#bc,4 do cs=cs~string.byte(bc,i) end return cs==k endif not verifyChecksum(bc,239) then while true do end endfor i=1,#bc,4 dolocal ins={op=opMap[string.byte(bc,i)~239],A=string.byte(bc,i+1),B=string.byte(bc,i+2),C=string.byte(bc,i+3)}if ins.op==1 then stack[ins.A]=tonumber(decrypt(consts[ins.B+1]))elseif ins.op==2 then stack[ins.A]=stack[ins.B]+stack[ins.C]elseif ins.op==3 then _G[decrypt(consts[1])](stack[ins.A])elseif ins.op==4 then pc[ins.A]=ins.Belseif ins.op==5 then returnelseif ins.op==6 then --[[NOOP]]--elseif ins.op==7 then stack[ins.A]=stack[ins.B]+tonumber(decrypt(consts[ins.C+1]))end end endreturn vm
vm('Φ╠Ωδ╠Θ╠╠╠(((20*2-20)/2+0)|(((30*2-20)/2+5)|',3735928559)()
